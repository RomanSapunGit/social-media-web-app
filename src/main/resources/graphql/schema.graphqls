type Query {
    getPosts(page: Int, size: Int, sortBy: String): [Post]
    getRoles: [Role]
    isUpvoteMade(identifier: String): Boolean
    isDownvoteMade(identifier: String): Boolean
    isPostExistInSavedList(identifier: String): Boolean
    findFollowingByUsername(username: String): Boolean
    getPostById(id: String): Post
    getComments(postId: String, pageNumber: Int): [Comment]
    getUsers(page: Int, pageSize: Int): [User]
    getTags(page: Int, pageSize: Int): [Tag]
    getTagsByTitleContaining(page: Int, pageSize: Int, title: String): [Tag]
    getUsersByUsernameContaining(page:Int, pageSize: Int, username: String): [User]
}

scalar Byte

type Post {
    title: String!
    description: String!
    creationTime: String!
    identifier: String!
    postAuthor: User
    tags: [Tag]
    comments: [Comment]
    postImages: [Image]
    upvotes: [User]
    downvotes: [User]
    userStatistics: UserStatistics
}

type User {
    name: String
    username: String!
    email: String
    notBlocked: String
    token: String
    tokenCreationDate: String
    roles: [Role]
    following: [User]
    savedPosts: [Post]
    savedComments: [Comment]
    followers: [User]
    posts: [Post]
    comments: [Comment]
    image: Image
    userStatistics: UserStatistics
    notifications: [Notification]

}

type Tag {
    name: String!
    posts: [Post]
}

type Comment {
    title: String!
    description: String!
    identifier: String!
    creationTime: String
    commentAuthor: User
    post: Post
}

type Image {
    identifier: String!
    name: String
    type: String
    imageData: Byte
    post: Post
    user: User
}

type UserStatistics {
    consent: String
    user: User
    onlineTimesDuration: [Int]
    createdPosts: [Post]
    createdComments: [Comment]
    viewedPosts: [Post]
}

type Notification {
    message: String!
    notificationCreationDate: String
    user: User
    post: Post
}

type Role {
    name: String!
}

type Page {
    content: [Comment]
    currentPage: Int
    total: Int
    totalPages: Int
}